x = "x (Feature)",
y = "Value",
caption = "Blue dashed line: log-odds (linear)\nRed line: Probability (S-curve)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
scale_y_continuous(sec.axis = sec_axis(~., name = "Probability", labels = scales::percent)) +
scale_x_continuous(limits = c(-10, 10))  # Set limits to show the full S-curve
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-12, 12, by = 0.1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
# Plot the log-odds (blue dashed line) to show the linear relationship with x
# Plot the probability (red line) to show the S-curve (sigmoid)
# Add labels and title
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
y = "Value",
# Customize the plot appearance
theme(plot.title = element_text(hjust = 0.5),
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-12, 12, by = 0.1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-3, 3, by = 0.1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-1, 1, by = 0.1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-12, 12, by = 0.1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the slope)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-12, 12, by = 1)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the slope)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values to create a clear and wide range for the S-curve
x <- seq(-12, 12, by = 0.9)  # Larger range to better show the full S-curve
# Define the coefficients (you can change these to adjust the slope)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame to store x, log_odds, and probability values
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds and the probability
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Customize the plot appearance
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis to show probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Set x-axis limits to show the full S-curve clearly
scale_x_continuous(limits = c(-12, 12))
# Generate a sequence of x values
x <- seq(-10, 10, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
# Plot the log-odds (blue dashed line) to show the linear relationship with x
# Plot the probability (red line) to show the S-curve (sigmoid)
# Add labels and a title to the plot
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Prob
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Generate a sequence of x values
x <- seq(-10, 10, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Generate a sequence of x values
x <- seq(-10, 10, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and a title to the plot
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Apply a minimal theme
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary y-axis to show the probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to ensure the full S-curve is visible
scale_x_continuous(limits = c(-10, 10)) +
# Set y-axis limits to [0, 1] to emphasize the bounded probability (S-curve)
coord_cartesian(ylim = c(0, 1))
# Generate a sequence of x values
x <- seq(-15, 15, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and a title to the plot
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Apply a minimal theme
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary y-axis to show the probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to ensure the full S-curve is visible
scale_x_continuous(limits = c(-10, 10)) +
# Set y-axis limits to [0, 1] to emphasize the bounded probability (S-curve)
coord_cartesian(ylim = c(0, 1))
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and a title to the plot
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Apply a minimal theme
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary y-axis to show the probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to ensure the full S-curve is visible
scale_x_continuous(limits = c(-15, 15)) +
# Set y-axis limits to [0, 1] to emphasize the bounded probability (S-curve)
coord_cartesian(ylim = c(0, 1))
x
x
x
x
# Generate a sequence of x values
x <- seq(-20, 20, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and a title to the plot
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Apply a minimal theme
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary y-axis to show the probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to ensure the full S-curve is visible
scale_x_continuous(limits = c(-15, 15)) +
# Set y-axis limits to [0, 1] to emphasize the bounded probability (S-curve)
coord_cartesian(ylim = c(0, 1))
# Generate a sequence of x values from -10 to 10 for a full view of the S-curve
x <- seq(-10, 10, by = 0.1)
# Define coefficients for logistic regression
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Scale the probability for visualization (bounded from 0 to 150)
scaled_probability <- probability * 150  # Multiply by 150 to scale it
# Create a data frame for plotting
data <- data.frame(x, log_odds, probability, scaled_probability)
# Plotting both log-odds and the scaled probability
ggplot(data) +
# Plot the log-odds (blue dashed line) showing the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the scaled probability (red line) to show the S-curve with modified scale
geom_line(aes(x = x, y = scaled_probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing Log-Odds and Scaling Probability",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Scaled Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Scaled Probability (red) shows S-curve") +
# Minimal theme for a clean plot
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis showing the actual probability between 0 and 1
scale_y_continuous(
sec.axis = sec_axis(~ . / 150, name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to show the S-curve clearly
scale_x_continuous(limits = c(-10, 10)) +
# Set the y-axis limit for the scaled probability from 0 to 150
coord_cartesian(ylim = c(0, 150))
# Load the ggplot2 library for plotting
library(ggplot2)
# Generate a sequence of x values from -10 to 10 for a full view of the S-curve
x <- seq(-10, 10, by = 0.1)
# Define coefficients for logistic regression
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit) = beta_0 + beta_1 * x
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Scale the probability for visualization (bounded from 0 to 150)
scaled_probability <- probability * 150  # Multiply by 150 to scale it
# Create a data frame for plotting
data <- data.frame(x, log_odds, probability, scaled_probability)
# Plotting both log-odds and the scaled probability
ggplot(data) +
# Plot the log-odds (blue dashed line) showing the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the scaled probability (red line) to show the S-curve with modified scale
geom_line(aes(x = x, y = scaled_probability), color = "red", size = 1.2) +
# Add labels and title
labs(title = "Logistic Regression: Linearizing Log-Odds and Scaling Probability",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Scaled Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Scaled Probability (red) shows S-curve") +
# Minimal theme for a clean plot
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary axis showing the actual probability between 0 and 1
scale_y_continuous(
sec.axis = sec_axis(~ . / 150, name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to show the S-curve clearly
scale_x_continuous(limits = c(-10, 10)) +
# Set the y-axis limit for the scaled probability from 0 to 150
coord_cartesian(ylim = c(0, 150))
# Load the ggplot2 library for plotting
library(ggplot2)
# Generate a sequence of x values
x <- seq(-20, 20, by = 0.1)  # A range that captures the full S-curve
# Define coefficients (adjust these to change the shape of the curve)
beta_0 <- 0  # Intercept
beta_1 <- 1  # Slope
# Calculate the log-odds (logit), which is linear
log_odds <- beta_0 + beta_1 * x
# Calculate the probability using the logistic (sigmoid) function
probability <- 1 / (1 + exp(-log_odds))
# Create a data frame for easy plotting
data <- data.frame(x, log_odds, probability)
# Plotting the log-odds (linear) and the probability (S-curve)
ggplot(data) +
# Plot the log-odds (blue dashed line) to show the linear relationship with x
geom_line(aes(x = x, y = log_odds), color = "blue", linetype = "dashed") +
# Plot the probability (red line) to show the S-curve (sigmoid)
geom_line(aes(x = x, y = probability), color = "red", size = 1.2) +
# Add labels and a title to the plot
labs(title = "Logistic Regression: Linearizing the Log-Odds and S-Curve",
subtitle = "Blue dashed line: Log-Odds (Linear)\nRed line: Probability (S-Curve)",
x = "x (Feature)",
y = "Value",
caption = "Log-Odds (blue) are linear, Probability (red) follows an S-curve") +
# Apply a minimal theme
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
# Add a secondary y-axis to show the probability as percentage
scale_y_continuous(
sec.axis = sec_axis(~ ., name = "Probability", labels = scales::percent)
) +
# Limit the x-axis to ensure the full S-curve is visible
scale_x_continuous(limits = c(-15, 15)) +
# Set y-axis limits to [0, 1] to emphasize the bounded probability (S-curve)
coord_cartesian(ylim = c(0, 1))
install.packages("quarto")
library(quarto)
quarto::quarto_check()
quarto::quarto_check()
library(quarto)
remove.packages("quarto")
install.packages("quarto")
library(quarto)
remove.packages("quarto")
